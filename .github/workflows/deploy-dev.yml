name: Deploy DEV

on:
  workflow_dispatch:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

jobs:
  deploy-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Deploy Database
      - name: Deploy PostgreSQL DEV
        working-directory: ./DB
        run: |
          echo "üöÄ Desplegando PostgreSQL DEV..."
          docker compose -f docker-compose-dev.yml -p expense-db-dev up -d
          sleep 30

      # Build Application
      - name: Build with Maven
        working-directory: ./Back/ms_expense/ms_expense
        run: |
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

      - name: Copy JAR to Dockerfile location
        run: |
          mkdir -p ./Back/ms_expense/target
          cp ./Back/ms_expense/ms_expense/target/*.jar ./Back/ms_expense/target/

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Image DEV
        working-directory: ./Back/ms_expense
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/gestion-back:dev .
          docker push ${{ secrets.DOCKER_USERNAME }}/gestion-back:dev

      # Deploy Application
      - name: Deploy Application DEV
        run: |
          echo "üöÄ Desplegando aplicaci√≥n DEV..."
          docker stop gestion-back-dev || true
          docker rm gestion-back-dev || true

          docker run -d \
            --name gestion-back-dev \
            --network expense-db-dev_default \
            -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=dev \
            -e SPRING_DATASOURCE_URL="jdbc:postgresql://postgres-expense-dev:5432/expense_db_dev" \
            -e SPRING_DATASOURCE_USERNAME=postgres \
            -e SPRING_DATASOURCE_PASSWORD=dev123456 \
            ${{ secrets.DOCKER_USERNAME }}/gestion-back:dev

      - name: Health Check DEV
        run: |
          echo "üîç Verificando salud de la aplicaci√≥n DEV..."
          sleep 45
          curl -f http://localhost:8080/actuator/health || exit 1
          echo "‚úÖ Aplicaci√≥n DEV desplegada exitosamente!"
